<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin_mapper">

	<!--회원 정보 찾기 ================================================================ -->
	<select id="findUserList" resultType="User">
		SELECT * FROM MEMBERS ORDER
		BY member_id
	</select>

	<select id="findUserByMemberId" resultType="User"
		parameterType="int">
		SELECT * FROM MEMBERS
		WHERE member_id = #{memberId}
	</select>

	<select id="findUserListBySearchCondition" parameterType="User"
		resultType="UserSearchCondition">
		SELECT * FROM MEMBERS
		WHERE 1 = 1
		<if test="memberId != null and memberId != ''">
			AND member_id LIKE '%' || #{searchKeyword} || '%'
		</if>

		<if test="userId != null and userId!= ''">
			AND user_id LIKE '%' || #{searchKeyword} || '%'
		</if>

		<if test="userPassword != null and userPassword!= ''">
			AND user_password LIKE '%' || #{searchKeyword} || '%'
		</if>

		<if test="userName != null and userName!= ''">
			AND user_name LIKE '%' || #{searchKeyword} || '%'
		</if>

		<if test="userNickname != null and userNickname!= ''">
			AND user_nickname LIKE '%' || #{searchKeyword} || '%'
		</if>

		<if test="userTel != null and userTel!= ''">
			AND user_tel LIKE '%' || #{searchKeyword} || '%'
		</if>

		<if test="userEmail != null and userEmail!= ''">
			AND user_email LIKE '%' || #{searchKeyword} || '%'
		</if>

		<if test="userBirthdate != null and userBirthdate!= ''">
			AND substr(user_birthdate, 1, 4) LIKE '%' ||
			#{searchKeyword} || '%'
		</if>


		<if test="birthMonth != null and birthMonth!= ''">
			AND substr(user_birthdate, 6, 2) = #{birthMonth}
		</if>

		<if test="birthDate != null and birthDate!= ''">
			AND substr(user_birthdate, 9, 2) = #{birthDate}
		</if>

		<if test="addressSystem != null and addressSystem!= ''">
			AND SUBSTR(user_address , 1, INSTR(user_address, ' ') - 1)
			= #{addressSystem}
		</if>

		<if test="emailSystem!= null and emailSystem!= ''">
			AND SUBSTR(user_email, INSTR(user_email, '@')) =
			#{emailSystem}
		</if>

		<if test="userType!= null and userType!= ''">
			AND user_type = #{userType}
		</if>
	</select>

	<insert id="saveMember" parameterType="User">
		INSERT INTO members
		(member_id, user_id, user_password, user_name, user_nickname,
		user_birthdate, user_tel, user_address, user_email, user_type)
		VALUES
		((select NVL(max(member_id), 0)+1 as member_id from members),
		#{userId} , #{userPassword} , #{userName} , #{userNickname} ,
		#{userBirthdate} , #{userTel} , #{userAddress} , #{userEmail} ,
		'ADM')
	</insert>

	<update id="modifyMember" parameterType="User">
		UPDATE MEMBERS
		SET
		member_id = #{memberId},
		user_id = #{userId},
		user_password =
		#{userPassword},
		user_name = #{userName},
		user_nickname =
		#{userNickname},
		user_birthdate = #{userBirthdate},
		user_address =
		#{userAddress},
		user_email = #{userEmail}
		WHERE
		member_id = #{memberId}
	</update>

	<delete id="removeMember" parameterType="int">
		DELETE FROM MEMBERS
		WHERE member_id = #{memberId}
	</delete>

	<!--레시피 찾기 ============================================================== -->
	<select id="findPostRecipeList" resultType="PostRecipe">
		SELECT * FROM
		RECIPE_BOARD
		ORDER BY recipe_id
	</select>

	<select id="findPostRecipeById" resultType="PostRecipe"
		parameterType="int">
		SELECT * FROM RECIPE_BOARD WHERE recipe_id = #{recipeId}
	</select>

	<update id="modifyRecipeType"
		parameterType="PostRecipeUpdateRecipeType">
		UPDATE RECIPE_BOARD
		SET
		recipe_type =
		#{selectedRecipeType}
		WHERE
		recipe_id = #{recipeId
	</update>

	<delete id="removePostRecipe" parameterType="int">
		DELETE FROM
		RECIPE_BOARD
		WHERE recipe_id = #{recipeId}
	</delete>

	<!--상품 정보 찾기 ================================================================ -->
	<select id="findProductList" resultType="Product">
		SELECT * FROM PRODUCT
		ORDER BY product_id
	</select>

	<select id="findProductByProductId" resultType="Product">
		SELECT * FROM
		PRODUCT
		WHERE product_id = #{productId}
	</select>

	<insert id="saveProduct" parameterType="Product">
		INSERT INTO PRODUCT
		(product_id, product_name, product_price, product_count, productImage,
		productType)
		VALUES
		((select NVL(max(product_id), 0)+1 as product_id
		from product),
		#{productName} , #{productPrice} , #{productCount} ,
		#{productImage} ,
		#{productType})
	</insert>

	<!--맛집 정보 찾기 ================================================================ -->
	<select id="findMustEatPlaceList" resultType="MustEatPlace">
		SELECT * FROM
		MUST_EAT_PLACE
		ORDER BY place_id
	</select>

	<select id="findMustEatPlaceByPlaceId" resultType="MustEatPlace">
		SELECT * FROM
		MUST_EAT_PLACE
		WHERE place_id = #{placeId}
	</select>

	<select id="findMustEatPlaceListBySearchCondition"
		parameterType="MustEatPlace" resultType="MustEatPlaceSearchCondition">
		SELECT * FROM MUST_EAT_PLACE
		WHERE 1 = 1
		<if test="placeId != null and placeId!= ''">
			AND place_id LIKE '%' || #{searchKeyword} || '%'
		</if>
		<if test="restaurantName != null and restaurantName!= ''">
			AND restaurant_name LIKE '%' || #{searchKeyword} || '%'
		</if>
		<if test="place != null and place!= ''">
			AND place LIKE '%' || #{searchKeyword} || '%'
		</if>
	</select>


	<insert id="saveMustEatPlace" parameterType="MustEatPlace">
		INSERT INTO
		MUST_EAT_PLACE
		(place_id, restaurant_name, place)
		VALUES
		((select
		NVL(max(place_id), 0)+1 as place_id
		from MUST_EAT_PLACE),
		#{restaurantName}, #{place})
	</insert>

	<update id="modifyMustEatPlace" parameterType="MustEatPlace">
		UPDATE
		MUST_EAT_PLACE
		SET
		restaurant_name = #{restaurantName},
		place = #{place}
		WHERE place_id = #{placeId}
	</update>

	<delete id="removeMustEatPlace" parameterType="int">
		DELETE FROM
		MUST_EAT_PLACE
		WHERE place_id = #{placeId}
	</delete>

	<!--주문 정보 찾기 ================================================================ -->
	<select id="findOrderList" resultType="Order">
		SELECT * FROM
		ORDERS
		ORDER
		BY order_id
	</select>

	<select id="findOrderItemListByMemberId" resultType="OrderItem"
		parameterType="int">
		SELECT * FROM
		ORDER_ITEMS
		WHERE member_id = #{memberId}
	</select>

	<select id="findOrderItemByMemberId" resultType="OrderItem"
		parameterType="int">
		SELECT * FROM
		ORDER_ITEMS
		WHERE member_id = #{memberId}
	</select>

	<select id="findOrderItemByOrderItemId" resultType="OrderItem"
		parameterType="int">
		SELECT * FROM
		ORDER_ITEMS
		WHERE order_item_id =
		#{orderItemId}
	</select>

	<select id="findOrderItemListByOrderId" resultType="OrderItem"
		parameterType="int">
		SELECT * FROM
		ORDER_ITEMS
		WHERE order_id = #{orderId}
	</select>


	<select id="findOrderListBySearchCondition"
		parameterType="Order" resultType="OrderSearchCondition">
		SELECT * FROM ORDERS
		WHERE 1 = 1
		<if test="orderId!= null and orderId!= ''">
			AND order_id LIKE '%' || #{searchKeyword} || '%'
		</if>
		<if test="memberId!= null and memberId!= ''">
			AND member_id LIKE '%' || #{searchKeyword} || '%'
		</if>
		<if test="totalPrice != null and totalPrice!= ''">
			AND total_price LIKE '%' || #{searchKeyword} || '%'
		</if>
		<if test="orderDate != null and orderDate!= ''">
			AND order_date LIKE '%' || #{orderDate} || '%'
		</if>
		<if test="orderStatus != null and orderStatus!= ''">
			AND order_status = #{orderStatus}
		</if>
	</select>

	<update id="modifyOrderItem" parameterType="OrderItem">
		UPDATE ORDER_ITEMS
		SET order_item_count = #{orderItemCount}
		WHERE order_item_id =
		#{orderItemId}

	</update>

	<update id="modifyTotalPrice" parameterType="int">
		update orders
		set total_price = (select sum(total_price)
		from order_items
		where order_id = #{orderId})
		where order_id = #{orderId};
	</update>
	<delete id="modifyOrder" parameterType="Order">
		DELETE FROM ORDER_ITEMS
		WHERE order_item_id = #{orderItemId}
	</delete>

</mapper>